name: Android Develop Merge - APK Workflow.

on:
  push:
    branches:
      - 'develop'

jobs:
  unit_test:
    name: Run Android Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Run Unit tests
        run: bash ./gradlew test --stacktrace

  ui_test:
    name: Run Android UI Tests
    runs-on: macos-latest
    timeout-minutes: 30
    strategy:
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast: true
      matrix:
        api-level: [19, 21, 23, 29]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run UI Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          script: ./gradlew connectedCheck --no-build-cache --no-daemon --stacktrace

  generate_apk:
    needs: [ui_test, unit_test]
    name: Run Android Tests and Generates APK
    runs-on: macos-latest
    outputs:
      apk_version_name: ${{ steps.apk_last_step.outputs.version_name }}

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build debug APK
        run: bash ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: Together Button - Example APK (Develop)
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Get APK version name
        id: apk_last_step
        run: echo "::set-output name=version_name::$(gradle -q printVersionName)"
